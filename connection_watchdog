#!/bin/bash
INET_IFACE="wlan1"
LOCAL_IFACE="wlan0"
TEST_FREQUENCY=60
GOOGLE_DNS="8.8.8.8"
OPEN_DNS="208.67.222.220"

function is_online {
	nc -z $GOOGLE_DNS 53
	online=$?
	if [ $online -eq 0 ]; then
		offtime=0
		return 0
	else
		offtime=`expr $offtime + 1`
		wall -n "Offline since $offtime minutes "
		return 1
	fi
}

function repair_wifi {
wpa_cli -i $INET_IFACE reauthenticate

while [[ $wpa_state -ne "COMPLETED" ]] && [[ $attempts -lt 60 ]]
do
	wpa_cli -i $INET_IFACE status > /tmp/wifi_status
	source /tmp/wifi_status
	attempts=`expr $attempts + 1`
	sleep 1
done
}

function repair_connection {
	wall -n "Trying to repair connection..."
	
	wpa_cli -i $INET_IFACE status > /tmp/wifi_status
	source /tmp/wifi_status
	
	#repairing unconnected wifi
	if [ $wpa_state -ne "COMPLETED" ]; then
		repair_wifi
	fi
	
	if [ $wpa_state -eq "COMPLETED" ]; then
		wall -n "wifi is connected getting a new dhcp lease..."
		repair_dhclient
	fi
	
	is_online
	
	if [ $offtime -gt 0 ]; then
		return 1
	else
		return 0
	fi
}

function repair_dhclient {
		dhclient -r $INET_IFACE
		dhclient $INET_IFACE
}
	
function loop_script {	
	while true
	do	
		is_online
		
		if [ $offtime -gt 10 ]; then
			shutdown -r -t 1 1
		fi
		
		if [ $offtime -gt 2 ]; then
			repair_connection
		fi
		sleep $TEST_FREQUENCY
done
}

loop_script

































function is_online {
	nc -z 8.8.8.8 53
	online=$?
	ping -c 1 -q google.de
	
	if [ $online -eq 0 ]; then
		offtime=0
		return 0
	else
		offtime=`expr $offtime + 1`
		return 1
	fi
}

function repair_wifi{
		wpa_cli -i $INET_IFACE status > wifi_status
		source wifi_status
		
		if [ $wpa_state -ne "COMPLETED" ]; then
			wpa_cli -i $INET_IFACE reauthenticate
			sleep 30
			
			wpa_cli -i $INET_IFACE status > wifi_status
			source wifi_status
			if [ $wpa_state -ne "COMPLETED" ]; then
				sleep 30				
				wpa_cli -i $INET_IFACE status > wifi_status
				source wifi_status
				if [ $wpa_state -ne "COMPLETED" ]; then
					return 1
				else if [ $wpa_state -eq "COMPLETED"  ]
					return 0
				fi	
			fi
		fi
}


function repair_connection {
	echo "Trying to repair connection..."
	repair_wifi
	
	if [ $? -eq 0 ]; then
		repair_dhclient
	fi
	
	is_online
	
	if [ $online -eq 0 ]; then
		return 0
	else if [ $online -ne 0 ]; then
		return 1
	fi
}

function repair_dhclient {
		dhclient -r $INET_IFACE
		sleep 3
		dhclient $INET_IFACE
		sleep 3
}

is_online
if [ $? -ne 0 ]; then
	repair_connection
	is_online
	
	if [ $? -ne 0 ]; then
		service networking restart
		sleep 30
		repair_wifi
		repair_dhclient
		sleep 30
	fi
	
	is_online
	if [ $? -ne 0 ]; then
		shutdown -r -t 90 
	fi
fi

#!/bin/bash

LOCAL_IFACE="wlan0"
INET_IFACE="wlan1"
LOCAL_NET="192.168.1.0/24"
LOCAL_IP="192.168.1.1"

# open DNS servers you use: cat /etc/resolv.conf
DNS_SERVER="8.8.8.8"

cat << EOF > /etc/resolv.conf
nameserver $DNS_SERVER
EOF

function reset {
	iptables -F 
	iptables -t nat -F
	iptables -t mangle -F
	iptables -P INPUT ACCEPT
	iptables -P OUTPUT ACCEPT
	iptables -P FORWARD ACCEPT
}

# Kabelnetzwerk maskieren, Port-Forwarding sowie Nat aktivieren
function activate_nat {
	iptables -A FORWARD -o $INET_IFACE -i $LOCAL_IFACE -s $LOCAL_NET -m conntrack --ctstate NEW -j ACCEPT
	iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
	iptables -t nat -A POSTROUTING -o $INET_IFACE -j MASQUERADE
}

###############################################
#############QUALITY OF SERVICE################
###############################################
function qos {
	iptables -t mangle -A PREROUTING -p tcp --sport ssh -j TOS --set-tos Minimize-Delay
	iptables -t mangle -A PREROUTING -p tcp --dport ssh -j TOS --set-tos Minimize-Delay

	iptables -t mangle -A PREROUTING -p tcp --sport http -j TOS --set-tos Minimize-Delay
	iptables -t mangle -A PREROUTING -p tcp --dport http -j TOS --set-tos Minimize-Delay

	iptables -t mangle -A PREROUTING -p tcp --sport https -j TOS --set-tos Minimize-Delay
	iptables -t mangle -A PREROUTING -p tcp --dport https -j TOS --set-tos Minimize-Delay
}

#flush iptables
reset
activate_nat
if [ $1 -eq 1 ];
then
	echo "Nat only!"
	exit 0
fi

###default policies###
iptables -P INPUT DROP
iptables -P OUTPUT DROP
iptables -P FORWARD DROP
#iptables -t nat -P INPUT DROP
#iptables -t nat -P OUTPUT DROP

###full loopback####
iptables -A INPUT -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

###Allow Ping to Outside###
iptables -A OUTPUT -p icmp --icmp-type echo-request -j ACCEPT
iptables -A INPUT -p icmp --icmp-type echo-reply -j ACCEPT

###Allow Ping this host from the Local network####
iptables -A INPUT -s $LOCAL_NET -p icmp --icmp-type echo-request -j ACCEPT
iptables -A OUTPUT -d $LOCAL_NET -p icmp --icmp-type echo-reply -j ACCEPT

###outgoing ssh###
function outgoing_ssh {
	iptables -A OUTPUT -o $INET_IFACE -p tcp --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT
	iptables -A INPUT -i $INET_IFACE -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT
}

###outgoing dns only to $DNS_SERVER###
function outgoing_dns {
	iptables -A OUTPUT -p udp -o $INET_IFACE --dport 53 -d $DNS_SERVER -j ACCEPT
	iptables -A INPUT -p udp -i $INET_IFACE --sport 53 -s $DNS_SERVER -j ACCEPT
	iptables -A OUTPUT -p tcp -o $INET_IFACE --dport 53 -d $DNS_SERVER -j ACCEPT
	iptables -A INPUT -p tcp -i $INET_IFACE --sport 53 -s $DNS_SERVER -j ACCEPT
}

###outgoing http###
function outgoing_http {
	iptables -A OUTPUT -o $INET_IFACE -p tcp --dport 80 -m state --state NEW,ESTABLISHED -j ACCEPT
	iptables -A INPUT -i $INET_IFACE -p tcp --sport 80 -m state --state ESTABLISHED -j ACCEPT
}

###outgoing https###
function outgoing_https {
	iptables -A OUTPUT -o $INET_IFACE -p tcp --dport 443 -m state --state NEW,ESTABLISHED -j ACCEPT
	iptables -A INPUT -i $INET_IFACE -p tcp --sport 443 -m state --state ESTABLISHED -j ACCEPT
}

###incoming dhcp requests on the local interface###
#iptables  -I INPUT -i $LOCAL_IFACE -p udp --dport 67:68 --sport 67:68 -j ACCEPT

###DON'T COMMENT THIS ON A REMOTE HOST###
###incoming ssh from the local network###
function incoming_ssh_from_local_network {
	iptables -A INPUT  -s $LOCAL_NET -p tcp --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT
	iptables -A OUTPUT -p tcp --sport 22 -m state --state ESTABLISHED     -j ACCEPT
}

###incoming dns  from the local network###
function incoming_dns_from_local_network {
	iptables -A INPUT  -s $LOCAL_NET -p udp --dport 53 -m state --state NEW,ESTABLISHED -j ACCEPT
	iptables -A OUTPUT -p udp --sport 53 -m state --state ESTABLISHED -j ACCEPT
	iptables -A INPUT  -s $LOCAL_NET -p tcp --dport 53 -m state --state NEW,ESTABLISHED -j ACCEPT
	iptables -A OUTPUT -p tcp --sport 53 -m state --state ESTABLISHED -j ACCEPT
}
outgoing_https
outgoing_http
outgoing_dns
outgoing_ssh
incoming_ssh_from_local_network
incoming_dns_from_local_network
#qos
